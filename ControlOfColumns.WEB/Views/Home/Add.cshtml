@using ConfigXmlHelper
@model ControlOfColumns.WEB.Models.ProductsViewModels

@{
    string path = HttpContext.Current.Server.MapPath("~/App_Config/app_config.xml");
    ConfigXmlReader reader = new ConfigXmlReader(path);
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (reader.ProductEnabled["Name"])
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (reader.ProductEnabled["Price"])
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (reader.ProductEnabled["Description"])
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        }


        @if (reader.ProductEnabled["Quantity"])
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (reader.ProductEnabled["Commnets"])
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Commnets, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Commnets, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Commnets, "", new { @class = "text-danger" })
                </div>
            </div>
        }
       

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Сохранить" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("К списку", "Index")
</div>

